services:
  db:
    image: postgres:15-alpine
    container_name: postgres
    environment:
    # Указываю тут переменные POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB т.к. для инициализации бд необходимы именно эти переменные, а не пользовательские
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Проверка доступности бд
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:8.0-alpine
    container_name: redis
    environment:
      - REDIS_PORT
    volumes:
      - redis_data:/data
    # Проверка доступности redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  php:
    build: ./php
    container_name: php
    environment:
      - REDIS_HOST
      - REDIS_PORT
      - DB_HOST
      - DB_DATABASE
      - DB_USERNAME
      - DB_PASSWORD
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./src/public:/var/www/html/public
    depends_on:
      - php

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - nginx
      - redis
      - db

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command:
      - '--nginx.scrape-uri=http://nginx:80/nginx_status'
    depends_on:
      - nginx

# Тома для сохранения данных между перезапусками
volumes:
  postgres_data:
  redis_data:
  grafana_data:
